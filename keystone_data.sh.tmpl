#!/bin/bash

# Tenants
keystone-manage tenant add admin

# Users
keystone-manage user add admin %ADMIN_PASSWORD%

# Roles
keystone-manage role add Admin
keystone-manage role add Member
keystone-manage role add KeystoneAdmin
keystone-manage role add KeystoneServiceAdmin
keystone-manage role grant Admin admin admin
keystone-manage role grant Admin admin
keystone-manage role grant KeystoneAdmin admin
keystone-manage role grant KeystoneServiceAdmin admin

# Services
keystone-manage service add nova compute "Nova Compute Service"
keystone-manage service add glance image "Glance Image Service"
keystone-manage service add keystone identity "Keystone Identity Service"

#endpointTemplates
keystone-manage endpointTemplates add %REGION% nova http://%HOST_IP%:8774/v1.1/%tenant_id% http://%HOST_IP%:8774/v1.1/%tenant_id%  http://%HOST_IP%:8774/v1.1/%tenant_id% 1 1
keystone-manage endpointTemplates add %REGION% glance http://%HOST_IP%:9292/v1 http://%HOST_IP%:9292/v1 http://%HOST_IP%:9292/v1 1 1
keystone-manage endpointTemplates add %REGION% keystone http://%HOST_IP%:5000/v2.0 http://%HOST_IP%:35357/v2.0 http://%HOST_IP%:5000/v2.0 1 1
# keystone-manage endpointTemplates add %REGION% swift http://%HOST_IP%:8080/v1/AUTH_%tenant_id% http://%HOST_IP%:8080/ http://%HOST_IP%:8080/v1/AUTH_%tenant_id% 1 1

# Tokens
keystone-manage token add %SERVICE_TOKEN% admin admin 2015-02-05T00:00

# EC2 related creds - note we are setting the token to user:tenant
# but keystone doesn't parse them - it is just a blob from keystone's 
# point of view.
keystone-manage credentials add admin EC2 'admin:admin' %ADMIN_PASSWORD% admin